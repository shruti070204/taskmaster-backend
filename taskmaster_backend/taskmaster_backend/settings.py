
"""
Django settings for taskmaster_backend project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import dj_database_url
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG",default=False, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS',default='localhost,127.0.0.1').split(',')


# Application definition

INSTALLED_APPS = [
    'django_filters', #filtering support in API
    'corsheaders', #en CORS (frontend-backend communication)
    'django.contrib.admin', #admin site
    'django.contrib.auth', #auth sys
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework', #django REST framework
    'rest_framework_simplejwt', #JWT authentication
    'api', #your custom app for task master
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', #allows cross origin requests
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'taskmaster_backend.urls' #tells jango where to look for top-lvl patterns

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [], #add templates folders here if needed
        'APP_DIRS': True, #use templates inside app folder
        'OPTIONS': {
            'context_processors': [ #inject vars into templates
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'taskmaster_backend.wsgi.application' #entry point for deploying appson server


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(default=config('DATABASE_URL'))
} #postgresql configration


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    }, # similarity check
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    }, #min len
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    }, #common pwd block
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    }, #disallow num-only pwd
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# url prefix Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT=os.path.join(BASE_DIR,'staticfiles')

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK={
    'DEFAULT_PERMISSION_CLASSES':[
        'rest_framework.permissions.IsAuthenticated',
    ], #enforce login required for api views by default
    'DEFAULT_AUTHENTICATION_CLASSES':[
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ], #uses token to authenticate user
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend'
    ], #en filtering(for status, duedates, etc) in apis
}

LOGGING = { #send logs to console. for debugging
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}
#cors configuration
CORS_ALLOWED_ORIGINS = [ #retrict to specific ones
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "https://taskmaster-frontend-iota.vercel.app",
    "https://taskmaster-frontend-8co586t66-shruti070204s-projects.vercel.app",
    "https://taskmaster-frontend-gislxuyw9-shruti070204s-projects.vercel.app",
    "https://taskmaster-frontend.vercel.app",
]


CORS_ALLOW_CREDENTIALS = True
#gmail  smtp
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = 'smtp.gmail.com'

EMAIL_PORT = 587

EMAIL_HOST_USER = config('EMAIL_HOST_USER')

EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')

EMAIL_USE_TLS = True
